version: '3.8'

services:
  app:
main
    build:
      context: .
      target: production
    container_name: sovereigntyos-app

    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c "npm ci && npm run build && npx vite preview --host 0.0.0.0 --port 3000"
chore/security-hardening
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
 main
      - PORT=3000
      - DATABASE_URL=postgresql://${DB_USER:-sovereignty}:${DB_PASSWORD:-sovereignty123}@postgres:5432/${DB_NAME:-sovereignty}
      - REDIS_URL=redis://redis:6379
      - MANUS_API_KEY=${MANUS_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sovereigntyos-network

  postgres:
    image: postgres:15-alpine
    container_name: sovereigntyos-postgres
    environment:
      - POSTGRES_DB=${DB_NAME:-sovereignty}
      - POSTGRES_USER=${DB_USER:-sovereignty}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-sovereignty123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sovereignty} -d ${DB_NAME:-sovereignty}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sovereigntyos-network

  redis:
    image: redis:7-alpine
    container_name: sovereigntyos-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - sovereigntyos-network

  nginx:
    image: nginx:alpine
    container_name: sovereigntyos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sovereigntyos-network

  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: sovereigntyos-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - sovereigntyos-network

  grafana:
    image: grafana/grafana:latest
    container_name: sovereigntyos-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - sovereigntyos-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  sovereigntyos-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
chore/security-hardening
